---
layout: project-standard
project_banner_partial: project/banner-series.html.haml
project_hero_partial: project/hero-series.html.haml
---
-# Defines the project series page template
-# Provides info about a particular series
-# List releases defined for the given series

-# Metadata from site.yml for the project
- project_description = site.projects[page.project]
- series = project_description.release_series[page.series_version]
- latest_release = series.releases.first

.ui.menu
  - unless series.integration_constraints.nil? || series.integration_constraints.empty?
    %a.item(href="#compatibility")
      %i.icon.world
      Compatibility
  %a.item{:href => "#get-it"}
    %i.icon.arrow.down.circle
    Get it
  %a.item{:href => "#whats-new"}
    %i.icon.fire
    What's new
  - migration_page_root = '/' + page.project + '/documentation/migrate/' + series.version + '/'
  - # development releases may not have a migration guide yet
  - has_migration_page = site.pages.index {|page| page.output_path == (migration_page_root + 'index.html')} != nil
  - if has_migration_page
    %a.item{:href => migration_page_root}
      %i.icon.share
      Migrate
  %a.item{:href => "#{doc_reference_url(project_description, series)}"}
    %i.icon.book
    Main documentation


- unless series.integration_constraints.nil? || series.integration_constraints.empty?
  %h2{:id => "compatibility"} Compatibility
  %table.ui.collapsing.table.striped.celled
    - series.integration_constraints.each_pair do |integration_id,constraint|
      - integration = project_description.integrations[integration_id]
      %tr
        %td
          %a{:href => "#{integration.url}"}
            = integration["name"]
        %td
          #{constraint.version}
  %p
    Not compatible with your requirements? Have a look at the
    %a{:href => "../"}
      other series.

%h2{:id => "get-it"} How to get it
%p
  Direct download is available
  %a{:href => "#{sourceforge_zip_url(project_description, latest_release)}", :title => "Download"}
    from SourceForge.
- if series[:artifacts]
  %p
    - nexus_search = project_description.maven.nexus_search
    Maven artifacts of #{project_description.name} are published to Maven Central and to the
    %a{:href => jboss_nexus_search_url(nexus_search.group_id_pattern, nexus_search.artifact_id_pattern, "#{series.version}.*")}
      JBoss Maven Repository.
    Refer to the
    %a{:href => "http://community.jboss.org/wiki/MavenGettingStarted-Users"} Maven Getting Started guide
    on the Jboss Wiki for more information on how to configure Maven.
  %p
    Below are the Maven coordinates of the main artifacts.
  %dl.sparse
    - series.artifacts.each do |artifact|
      - group_id = latest_release[:group_id]
      - group_id ||= series[:group_id]
      - group_id ||= project_description.maven[:group_id]
      - artifact_id = artifact.artifact_id
      - version = latest_release.version
      - summary = artifact[:summary]
      - summary ||= artifact.artifact_id
      %dt
        %a.ui.label.large.blue{:href => jboss_nexus_search_url(group_id, artifact_id, version)}
          #{group_id}:#{artifact_id}:#{version}
      %dd= summary
      - if false # disabled for now, takes too much vertical space
        :asciidoc
          :groupId: #{group_id}
          :artifactId: #{artifact_id}
          :version: #{version}
          [source,xml]
          [subs="verbatim,attributes"]
          ----
          <dependency>
              <groupId>{groupId}</groupId>
              <artifactId>{artifactId}</artifactId>
              <version>{version}</version>
          </dependency>
          ----
%p
  More information about specific releases (announcements, download links) can be found
  %a{:href => "#releases"}
    here.

%h2{:id => "whats-new"} What's new

- if latest_release[:announcement_url]
  %p
    %em
      Latest release announcement (#{latest_release.date}):
      %a{:href => "#{latest_release.announcement_url}"}
        #{latest_release.version}.

- version_cleaner = page.project == 'orm' ? lambda {|v| v != '4.2.0.Final' && v != '4.3.0.Final' && v != '5.0.0.Final' && v =~ /^(.*).Final$/ ? $1 : v } : lambda {|v| v}
- comma_separated_release_versions = series.releases.collect{|r| r.version}.collect!{|v| version_cleaner.call(v)}.join( "%2C%20" )
%p
  A detailed list of new features, improvements and fixes in this series can be found
  %a{:href => "https://hibernate.atlassian.net/issues/?jql=project%20%3D%20#{project_description.jira['key']}%20AND%20fixVersion%20in%20(#{comma_separated_release_versions})%20ORDER%20BY%20updated"}
    on our JIRA instance.

~ content

%h2{:id => "releases"} Older releases
- unless series.nil?
  .ui.grid.series-versions
    - series.releases.each do |release|
      - group_id = release[:group_id]
      - group_id ||= series[:group_id]
      - group_id ||= project_description.maven[:group_id]
      - artifact_id ||= project_description.maven[:main_artifact_id]
      - version = release.version
      .ui.row
        .three.wide.column
          %span.ui.label.version{:class => "#{release.stable ? 'green' : 'orange'}"}
            = version
        .thirteen.wide.column
          %p
            %small= release.date
          %p
            %a.ui.label.blue{:href => jboss_nexus_search_url(group_id, artifact_id, version)}
              #{group_id}:#{artifact_id}:#{version}
          - if release[:summary]
            %p
              = release.summary
          - if release[:announcement_url]
            %p
              %a.ui.button.icon{:href => "#{sourceforge_zip_url(project_description, release)}"}
                %i.icon.download
                Download
              %a.ui.button.icon{:href => "#{release.announcement_url}"}
                %i.icon.announcement
                Release announcement
- else
  %p There are no releases configured for this series.
