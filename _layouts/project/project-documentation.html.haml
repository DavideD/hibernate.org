---
layout: project-standard
project_buttons_partial: project/documentation-buttons.html.haml
---
-# project documentation page
-# show title, action buttons for reference doc and getting started guide
-# show reference documentation for each of the highlighted releases

-# Metadata from site.yml for the project
- project_description = site.projects[page.project]
- get_started_url = site.projects[page.project].getting_started.nil? ? nil : relative("#{site.projects[page.project].getting_started}", page)
- stable_series = project_description.latest_stable_series

-# Documentation table built from the metadata

%h2 Reference documentation

- active_series = project_description.release_series.nil? ? nil : project_description.release_series.values.select{|s| s.displayed}
- if not active_series.nil?
  .ui.grid.documentation-versions
    - active_series.each do |series|
      - release = series.releases[0]
      .ui.row
        .three.wide.column
          %span.ui.label.series= series.version
        .thirteen.wide.column
          %p
            %span.ui.label.large
              %strong= release.version
              %span.detail= release.date
            %span.ui.tag.label{:class => "#{release.stable ? 'green' : 'orange'}"} #{release.stable ? 'stable'   : 'development'}
          %p
            = series.summary
          %p
            %span.ui.button.disabled
              Documentation
            %a.ui.right.labeled.icon.button.primary(href="#{doc_reference_url(project_description, series)}")
              %i.icon.file.text.outline
              HTML
            - pdf_url = doc_reference_pdf_url(project_description, series)
            - if not pdf_url.nil?
              %a.ui.right.labeled.icon.button.primary(href="#{pdf_url}")
                %i.icon.file.pdf.outline
                PDF
            %a.ui.right.labeled.icon.button.primary(href="#{javadoc_url(project_description, series)}/")
              %i.icon.code.outline
              API (JavaDoc)
- else
  %p There is no reference documentation configured for this project.

- older_series = project_description.release_series.nil? ? nil : project_description.release_series.values.select{|s| !s.displayed}
- unless older_series.nil? || older_series.empty?
  %p
    %a.ui.button.right.labeled.icon#older-series-button(href="javascript: void(0)")
      %i.icon.snowflake
      %span See older series
  :javascript
    $(document).ready(function() {
      $('#older-series-button').click(function() {
        $('#older-series').slideToggle(400, function() {
        });
        var buttonText = $('#older-series-button span');
        buttonText.text() == 'See older series' ?
          buttonText.text("Hide older series") :
          buttonText.text("See older series");
      });
    });

  #older-series
    .ui.grid.documentation-versions
      - older_series.each do |series|
        - release = series.releases[0]
        .ui.row
          .three.wide.column
            %span.ui.label.series= series.version
          .thirteen.wide.column
            %p
              %span.ui.label.large
                %strong= release.version
                %span.detail= release.date
              %span.ui.tag.label{:class => "#{release.stable ? 'green' : 'orange'}"} #{release.stable ? 'stable'   : 'development'}
            %p
              = series.summary
            %p
              %span.ui.button.disabled
                Documentation
              %a.ui.right.labeled.icon.button.primary(href="#{doc_reference_url(project_description, series)}")
                %i.icon.file.text.outline
                HTML
              - pdf_url = doc_reference_pdf_url(project_description, series)
              - if not pdf_url.nil?
                %a.ui.right.labeled.icon.button.primary(href="#{pdf_url}")
                  %i.icon.file.pdf.outline
                  PDF
              %a.ui.right.labeled.icon.button.primary(href="#{javadoc_url(project_description, series)}/")
                %i.icon.code.outline
                API (JavaDoc)

~ content
